EXERCISE - SHORT ANSWERS
// 1. What is a real-life scenario that uses linear search?
Searching an item in the grocery store.  Main categories for most items are listed for each aisles. Starting off with aisle 1, you precede to the next until your category is found.

// 2. What is a real-life scenario that uses binary search?
Searching airline status for arrivals and departures.  All flights are listed in alphabetical order on multiple panels by city.  The "divide and conquer" is easily used by testing the beginning/end node of each panel and discarding if needed.

// 3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?
7

// 4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?
3

// 5. Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
If you were unable to sort the collection, linear search would be the chosen method as binary search only works on sorted collection.

// 6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.
Binary search.  Both search methods can be used in a sorted collection, but generally speaking, binary search is much quicker in finding the targeted value.

PROGRAMMING ASSIGNMENT
// 1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.
function findTerm (collection, term) {
  let mid;
  let low = collection[0];
  let high = collection[collection.length - 1];
  //console.log(collection.indexOf(low));
  //console.log("fly" < "test");

  while (collection.indexOf(low) <= collection.indexOf(high)) {
    mid = Math.floor((collection.indexOf(low) + collection.indexOf(high)) / 2);
    //console.log(mid);
    if ( collection[mid] > term){
      high = collection[mid - 1];
    } else if (collection[mid] < term) {
      low = collection[mid + 1];
    } else {
      return 'The term \"' + collection[mid] + '\" was found at position ' + (mid + 1) + '.';
    }
  }
  return 'The term \"' + collection[mid] + '\" was not found.'
}

let results = findTerm(["abs", "albatross", "cat", "fly", "jar", "phone", "try", "yarn"], "albatross");

console.log(results);

// 2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.

function findFish(fishTank, typeOfFish){
  for (let i = 0; i < fishTank.length; i++) {
    if (fishTank[i] === typeOfFish) {
      return "White-spotted goldfish found!!";
    }
  }
  return "Sorry, there are no white-spotted goldfish.";
}

let results = findFish(["fish 1", "white-spotted goldfish", "fish 2", "fish 3", "fish 4", "fish 5", "fish 6" ], "white-spotted goldfish");

console.log(results);